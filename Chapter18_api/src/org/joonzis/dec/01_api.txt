1.1 java.lang 패키지
 - 자바 프로그램의 기본적인 클래스를 담고 있는 패키지
 - import 없이 사용 가능
 
	클래스									용도
 	Object							- 자바 클래스의 최상위 클래스
 	
 	System							- 표준 입력 장치(키보드)로부터 데이터를 입력받을 때 사용
				 					- 표준 출력 장치(모니터)로 출력하기 위해 사용
				 					- 자바 가상 기계를 종료시킬 때 사용
				 					- 쓰레기 수집기를 실행 요청할 때 사용
 
 	Class							- 클래스를 메모리로 로딩할 때 사용
 	
 	String							- 문자열을 저장하고 여러 가지 정보를 얻을 때 사용
 	
 	StringBuffer, StringBuilder		- 문자열을 저장하고 내부 문자열을 조작할 때 사용
 	
 	Math							- 수학 함수를 이용할 때 사용
 	
 	Wrapper(Byte,Short,Character	- 기본 타입의 데이터를 갖는 객체를 만들 때 사용
 			Integer, Float, Double	- 문자열을 기본 타입으로 변환할 때 사용
 			Boolean, Long)			- 입력값 검사에 사용

	* String, StringBuffer, StringBuilder의 차이
	String 			: 문자열 연산이 적고 멀티쓰레드 환경에서 사용
	StringBuffer	: 문자열 연산이 많고 멀티쓰레드 환경에서 사용
	StringBuilder	: 문자열 연산이 많고 단일쓰레드이거나 동기화를 고려하지 않아도 되는 경우에 사용



1.2 java.lang.Object 클래스
 - 모든 클래스의 슈퍼클래스 (super)이다. (=> 단군 할배)
 - 모든 클래스는 자동으로 Object 클래스를 상속받는다.
 - 따라서, 모든 클래스는 Object 클래스의 메소드를 사용할 수 있다.
 - 모든 클래스 및 데이터는 Object 클래스에 저장할 수 있다.
 - 주요 메소드
	1) clone() 		: 인스턴스 복제 
		- 실제 복제 기능은 Object 클래스의 clone()에 정의 되어있다.
		- 반드시 Cloneable 인터페이스를 구현(implements) 해야 한다.
		- CloneNotSupportedException 예외 처리를 해야 한다.(try ~ catch)
		- 본래 clone() 메소드의 접근 지시자(protected)를 public으로 변경한다.
		
	2) equals() 	: 인스턴스 동등 비교
	3) getClass()	: 클래스 알아내기
	4) hashCode() 	: 해시 코드 값 알아내기 
	5) toString()	: 인스턴스 출력 문자열 반환 


1.3 java.util 패키지
 - 유틸리티성 역할을 하는 클래스들을 담고 있다.
 - 컬렉션 클래스들이 대부분을 차지하고 있다.
 	* 컬렉션(Collections) 클래스 = 여러 유용한 알고리즘을 구현한 메소드들의 집합
 		정렬(Sorting), 섞기(Shuffling), 탐색(Searching) 등이 있다.


	클래스						용도
 	Arrays				- 배열을 조작(비교, 복사, 정렬, 찾기)할 때 사용
 	
 	Calendar			- 운영체제의 날짜와 시간을 얻을 때 사용
 					
 	Date				- 날짜와 시간 정보를 저장하는 클래스
 	
 	Objects				- 객체 비교, null 여부 등을 조사할 때 사용
 
 	StringTokenizer		- 특정 문자로 구분된 문자열을 뽑아낼 때 사용
 	
	Random				- 난수를 얻을 때 사용
	
	
	
